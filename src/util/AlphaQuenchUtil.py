#!/usr/bin/env python
# Author P G Jones - 09/02/2012 <p.g.jones@qmul.ac.uk>
# Alpha quenching factor calculator, values from Wan UW

def QuenchingFactor( energy ):
    """ Returns the quenching factor for a alpha energy in MeV."""
    global kEnergyValues, kQuenchingFactors
    # Bounds check
    if energy < kEnergyValues[0]:
        return kQuenchingFactors[0]
    elif energy > kEnergyValues[-1]:
        return kQuenchingFactors[-1]
    # First find the correct index position
    for index, x in enumerate( kEnergyValues ):
        if x > energy:
            break
    index -= 1
    # Now interpolate the answer
    qFactor = ( kQuenchingFactors[index+1] - kQuenchingFactors[index] ) / ( kEnergyValues[index+1] - kEnergyValues[index] ) * ( energy - kEnergyValues[index] ) + kQuenchingFactors[index]
    return qFactor

# Energy values
kEnergyValues = [0.10,0.16,0.22,0.28,0.34,0.40,0.46,0.52,0.58,0.64,0.70,0.76,0.82,0.88,0.94,1.00,1.06,1.12,1.18,1.24,1.30,1.36,1.42,1.48,1.54,1.60,1.66,1.72,1.78,1.84,1.90,1.96,2.02,2.08,2.14,2.20,2.26,2.32,2.38,2.44,2.50,2.56,2.62,2.68,2.74,2.80,2.86,2.92,2.98,3.04,3.10,3.16,3.22,3.28,3.34,3.40,3.46,3.52,3.58,3.64,3.70,3.76,3.82,3.88,3.94,4.00,4.06,4.12,4.18,4.24,4.30,4.36,4.42,4.48,4.54,4.60,4.66,4.72,4.78,4.84,4.90,4.96,5.02,5.08,5.14,5.20,5.26,5.32,5.38,5.44,5.50,5.56,5.62,5.68,5.74,5.80,5.86,5.92,5.98,6.04,6.10,6.16,6.22,6.28,6.34,6.40,6.46,6.52,6.58,6.64,6.70,6.76,6.82,6.88,6.94,7.00,7.06,7.12,7.18,7.24,7.30,7.36,7.42,7.48,7.54,7.60,7.66,7.72,7.78,7.84,7.90,7.96,8.02,8.08,8.14,8.20,8.26,8.32,8.38,8.44,8.50,8.56,8.62,8.68,8.74,8.80,8.86,8.92,8.98,9.04,9.10,9.16,9.22,9.28,9.34,9.40,9.46,9.52,9.58,9.64,9.70,9.76,9.82,9.88,9.94,10.00,10.06,10.12,10.18,10.24,10.30,10.36,10.42,10.48,10.54,10.60,10.66,10.72,10.78,10.84,10.90,10.96,11.02,11.08,11.14,11.20,11.26,11.32,11.38,11.44,11.50,11.56,11.62,11.68,11.74,11.80,11.86,11.92,11.98,12.04] 
# Now the quenching factors
kQuenchingFactors = [7.73,9.01,10.03,10.89,11.62,12.24,12.77,13.23,13.62,13.95,14.24,14.48,14.68,14.85,14.98,15.09,15.18,15.24,15.29,15.31,15.33,15.33,15.32,15.30,15.27,15.23,15.19,15.14,15.09,15.03,14.96,14.90,14.83,14.75,14.68,14.60,14.53,14.45,14.37,14.29,14.20,14.12,14.04,13.96,13.87,13.79,13.71,13.62,13.54,13.46,13.38,13.29,13.21,13.13,13.05,12.97,12.89,12.81,12.73,12.66,12.58,12.50,12.43,12.35,12.28,12.20,12.13,12.06,11.99,11.92,11.85,11.78,11.71,11.65,11.58,11.51,11.45,11.38,11.32,11.26,11.19,11.13,11.07,11.01,10.95,10.89,10.83,10.78,10.72,10.66,10.61,10.55,10.50,10.44,10.39,10.34,10.28,10.23,10.18,10.13,10.08,10.03,9.98,9.93,9.88,9.84,9.79,9.74,9.70,9.65,9.61,9.56,9.52,9.47,9.43,9.39,9.35,9.30,9.26,9.22,9.18,9.14,9.10,9.06,9.02,8.98,8.95,8.91,8.87,8.83,8.80,8.76,8.72,8.69,8.65,8.62,8.59,8.55,8.52,8.48,8.45,8.42,8.39,8.36,8.32,8.29,8.26,8.23,8.20,8.17,8.14,8.11,8.08,8.06,8.03,8.00,7.97,7.95,7.92,7.89,7.86,7.84,7.81,7.78,7.76,7.73,7.71,7.68,7.66,7.63,7.61,7.58,7.56,7.53,7.51,7.48,7.46,7.44,7.41,7.39,7.37,7.34,7.32,7.30,7.27,7.25,7.23,7.21,7.18,7.16,7.14,7.12,7.10,7.07,7.05,7.03,7.01,6.99,6.97,6.94]
